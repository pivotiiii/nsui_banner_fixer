# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build and test on Windows.
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    strategy:
      matrix:
        arch:
          - amd64
          - amd64_x86

    steps:
    - uses: actions/checkout@v4
    - name: Cache
      uses: actions/cache@v4.0.2
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: ${{github.workspace}}/build_${{matrix.arch}}/_deps/*-src
        # An explicit key for restoring and saving the cache
        key: ${{ runner.os }}-build-${{matrix.arch}}-${{hashFiles('dependencies.cmake', 'patches/*.patch')}}
          
    - name: Enable MSVC Developer Command Prompt
      uses: ilammy/msvc-dev-cmd@v1.13.0
      with: 
        arch: ${{matrix.arch}}
        
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build_${{matrix.arch}} -S ${{github.workspace}} -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE #-DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build_${{matrix.arch}} --config ${{env.BUILD_TYPE}} --target ALL_BUILD

    - name: Test
      working-directory: ${{github.workspace}}/build_${{matrix.arch}}
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Pack
      working-directory: ${{github.workspace}}/build_${{matrix.arch}}
      run: cpack -G ZIP -C ${{env.BUILD_TYPE}}

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: nsui_banner_fixer_CPACK_${{env.BUILD_TYPE}}_${{matrix.arch}}
        path: |
          ${{github.workspace}}/build_${{matrix.arch}}/_CPack_Packages/win32/ZIP/*
          ${{github.workspace}}/build_${{matrix.arch}}/_CPack_Packages/win64/ZIP/*
          !${{github.workspace}}/build_${{matrix.arch}}/_CPack_Packages/*/ZIP/*.zip
        if-no-files-found: ignore
          
