add_executable(nsui_banner_fixer nsui_banner_fixer.cpp)
target_compile_features(nsui_banner_fixer PRIVATE cxx_std_20)

target_compile_definitions(nsui_banner_fixer PRIVATE VERSION=\"${CMAKE_PROJECT_VERSION}\")
string(TIMESTAMP year %Y UTC)
target_compile_definitions(nsui_banner_fixer PRIVATE YEAR="${year}")
string(TIMESTAMP compile_time "%Y-%m-%d %H:%M:%S UTC" UTC)
target_compile_definitions(nsui_banner_fixer PRIVATE COMPILE_TIME="${compile_time}")

add_library(nsui_banner_fixer_game 
            Game.hpp 
            Game.cpp 
            Settings.hpp)
target_compile_features(nsui_banner_fixer_game PRIVATE cxx_std_20)
target_include_directories(nsui_banner_fixer_game INTERFACE ${CMAKE_CURRENT_SOURCE_DIR})
target_link_libraries(nsui_banner_fixer_game PRIVATE subprocess)

target_link_libraries(nsui_banner_fixer PRIVATE nsui_banner_fixer_game TCLAP)

include(generate_product_version)
generate_product_version(ProductVersionFiles
                        NAME ${CMAKE_PROJECT_NAME}
                        ICON ${CMAKE_SOURCE_DIR}/resources/icon.ico
                        VERSION_MAJOR ${CMAKE_PROJECT_VERSION_MAJOR}
                        VERSION_MINOR ${CMAKE_PROJECT_VERSION_MINOR}
                        VERSION_PATCH ${CMAKE_PROJECT_VERSION_PATCH}
                        COMPANY_NAME pivotiii
                        FILE_DESCRIPTION ${CMAKE_PROJECT_DESCRIPTION})
target_sources(nsui_banner_fixer PRIVATE ${ProductVersionFiles})

add_custom_command(
    TARGET nsui_banner_fixer POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E make_directory
            $<TARGET_FILE_DIR:nsui_banner_fixer>/tools
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
            ${3dstool_SOURCE_DIR}/3dstool.exe
            ${ctrtool_SOURCE_DIR}/ctrtool.exe
            ${makerom_SOURCE_DIR}/makerom.exe
            $<TARGET_FILE_DIR:nsui_banner_fixer>/tools)

install(TARGETS nsui_banner_fixer DESTINATION .)