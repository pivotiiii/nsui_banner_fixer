diff --git a/CMakeLists.txt b/CMakeLists.txt
index f92ecb0..c26ef95 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,20 +1,11 @@
 cmake_minimum_required(VERSION 3.7)
 
 project(TCLAP VERSION 1.4.0 LANGUAGES CXX)
-set("PROJECT_DESCRIPTION" "A header-only templatized C++ command line parser library")
-set("PROJECT_HOMEPAGE_URL" "https://sourceforge.net/projects/tclap/")
 
 set(CMAKE_CXX_STANDARD 98)
 set(CMAKE_CXX_STANDARD_REQUIRED True)
 add_definitions(-DHAVE_TCLAP_CONFIG_H)
 
-enable_testing()
-include(CTest)
-include(CPackComponent)
-include(GNUInstallDirs)
-include(CMakePackageConfigHelpers)
-string(REPLACE "/${CMAKE_LIBRARY_ARCHITECTURE}" "" CMAKE_INSTALL_LIBDIR_ARCHIND "${CMAKE_INSTALL_LIBDIR}")
-
 include(CheckCXXSourceCompiles)
 check_cxx_source_compiles("#include <strstream>
 int main() { std::istrstream iss; }" TCLAP_HAVE_STRSTREAM)
@@ -28,129 +19,5 @@ set(GENERATED_CONFIG_BUILD_PATH "${GENERATED_CONFIG_BUILD_DIR}/${GENERATED_CONFI
 
 configure_file(config.h.in "${GENERATED_CONFIG_BUILD_PATH}")
 
-cpack_add_component(lib
-	DISPLAY_NAME "library"
-	DESCRIPTION "The header-only library"
-	REQUIRED
-)
-
 add_library(TCLAP INTERFACE)
-target_include_directories(TCLAP INTERFACE
-  $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
-  $<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include>
-)
-
-install(TARGETS TCLAP EXPORT TCLAP
-  INCLUDES
-  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
-)
-install(FILES "${GENERATED_CONFIG_BUILD_PATH}"
-  DESTINATION include/tclap
-  COMPONENT lib
-)
-
-
-if(DOC_INSTALL_DIR)
-else()
-  if(WIN32)
-    set(DOC_INSTALL_DIR ${CMAKE_INSTALL_PREFIX}/doc)
-  else()
-    set(DOC_INSTALL_DIR ${CMAKE_INSTALL_PREFIX}/share/doc/tclap)
-  endif()
-endif()
-
-cpack_add_component(doc
-	DISPLAY_NAME "documentation"
-	DESCRIPTION "Documentation files for TCLAP"
-)
-
-install(DIRECTORY ${PROJECT_BINARY_DIR}/docs/html
-  DESTINATION ${DOC_INSTALL_DIR}
-  COMPONENT doc
-)
-install(FILES ${PROJECT_BINARY_DIR}/docs/index.html ${PROJECT_BINARY_DIR}/docs/manual.html
-  ${PROJECT_BINARY_DIR}/docs/style.css DESTINATION ${DOC_INSTALL_DIR}
-  COMPONENT doc
-)
-
-option(BUILD_EXAMPLES "Build examples" ON)
-option(BUILD_UNITTESTS "Build unit tests" ON)
-option(BUILD_DOC "Build documentation" ON)
-
-if(BUILD_DOC)
-	add_subdirectory(docs)
-endif()
-if(BUILD_EXAMPLES)
-	add_subdirectory(examples)
-endif()
-add_subdirectory(tests)
-if(BUILD_UNITTESTS)
-	add_subdirectory(unittests)
-endif()
-add_subdirectory(include/tclap)
-
-set(PackagingTemplatesDir "${CMAKE_CURRENT_SOURCE_DIR}/packaging")
-
-
-set(CPACK_PACKAGE_NAME "${PROJECT_NAME}")
-set(CPACK_PACKAGE_VENDOR "tclap developers")
-set(CPACK_PACKAGE_DESCRIPTION "${PROJECT_DESCRIPTION}")
-set(CPACK_DEBIAN_PACKAGE_NAME "${CPACK_PACKAGE_NAME}")
-set(CPACK_RPM_PACKAGE_NAME "${CPACK_PACKAGE_NAME}")
-set(CPACK_PACKAGE_HOMEPAGE_URL "${PROJECT_HOMEPAGE_URL}")
-set(CPACK_PACKAGE_MAINTAINER "${CPACK_PACKAGE_VENDOR}")
-set(CPACK_DEBIAN_PACKAGE_MAINTAINER "${CPACK_PACKAGE_MAINTAINER}")
-set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/COPYING")
-set(CPACK_RESOURCE_FILE_README "${CMAKE_CURRENT_SOURCE_DIR}/README")
-
-set(CPACK_DEBIAN_LIB_PACKAGE_NAME "lib${PROJECT_NAME}-dev")
-set(CPACK_DEBIAN_LIB_PACKAGE_DEPENDS "libc6-dev")
-set(CPACK_DEBIAN_LIB_PACKAGE_SUGGESTS "cmake, pkg-config, pkg-conf")
-
-set(CPACK_DEBIAN_DOC_PACKAGE_NAME "${PROJECT_NAME}-dev")
-
-set(CPACK_RPM_LIB_PACKAGE_NAME "lib${PROJECT_NAME}-devel")
-set(CPACK_RPM_LIB_PACKAGE_SUGGESTS "${CPACK_DEBIAN_PACKAGE_SUGGESTS}")
-
-set(CPACK_RPM_DOC_PACKAGE_NAME "${PROJECT_NAME}-doc")
-
-set(CPACK_DEB_COMPONENT_INSTALL ON)
-set(CPACK_RPM_COMPONENT_INSTALL ON)
-set(CPACK_NSIS_COMPONENT_INSTALL ON)
-set(CPACK_DEBIAN_COMPRESSION_TYPE "xz")
-
-set(PKGCONFIG_NAME "tclap")
-set(PKG_CONFIG_FILE_NAME "${CMAKE_CURRENT_BINARY_DIR}/${PKGCONFIG_NAME}.pc")
-configure_file("${PackagingTemplatesDir}/pkgconfig.pc.in" "${PKG_CONFIG_FILE_NAME}" @ONLY)
-install(FILES "${PKG_CONFIG_FILE_NAME}"
-  DESTINATION "${CMAKE_INSTALL_LIBDIR_ARCHIND}/pkgconfig"
-  COMPONENT lib
-)
-
-set(CONFIG_FILE_NAME_WITHOUT_EXT "${PROJECT_NAME}Config")
-set(CMAKE_CONFIG_VERSION_FILE_NAME "${CMAKE_CURRENT_BINARY_DIR}/${CONFIG_FILE_NAME_WITHOUT_EXT}-version.cmake")
-set(CMAKE_CONFIG_FILE_NAME "${CONFIG_FILE_NAME_WITHOUT_EXT}.cmake")
-set(CMAKE_CONFIG_DESTINATION "${CMAKE_INSTALL_LIBDIR_ARCHIND}/cmake/${PROJECT_NAME}")
-
-install(EXPORT TCLAP
-  NAMESPACE TCLAP::
-  FILE "${CMAKE_CONFIG_FILE_NAME}"
-  DESTINATION "${CMAKE_CONFIG_DESTINATION}"
-  COMPONENT lib
-)
-
-if(${CMAKE_VERSION} VERSION_GREATER "3.14")
-	set(OPTIONAL_ARCH_INDEPENDENT "ARCH_INDEPENDENT")
-endif()
-
-write_basic_package_version_file("${CMAKE_CONFIG_VERSION_FILE_NAME}"
-    COMPATIBILITY AnyNewerVersion
-    ${OPTIONAL_ARCH_INDEPENDENT}
-)
-
-install(FILES "${CMAKE_CONFIG_VERSION_FILE_NAME}"
-  DESTINATION "${CMAKE_CONFIG_DESTINATION}"
-  COMPONENT lib
-)
-
-include(CPack)
+target_include_directories(TCLAP INTERFACE ${CMAKE_CURRENT_LIST_DIR}/include)
diff --git a/include/tclap/CMakeLists.txt b/include/tclap/CMakeLists.txt
deleted file mode 100644
index 79bad0b..0000000
--- a/include/tclap/CMakeLists.txt
+++ /dev/null
@@ -1,4 +0,0 @@
-file(GLOB HEADER_FILES *.h)
-
-#target_sources(TCLAP INTERFACE ${HEADER_FILES})
-install(FILES ${HEADER_FILES} DESTINATION include/tclap COMPONENT lib)
diff --git a/include/tclap/CmdLine.h b/include/tclap/CmdLine.h
index d75a944..42e4b09 100644
--- a/include/tclap/CmdLine.h
+++ b/include/tclap/CmdLine.h
@@ -346,17 +346,17 @@ inline void CmdLine::_constructor() {
     _autoArgs.setParser(*this);
     // add(_autoArgs);
 
-    v = new IgnoreRestVisitor(*this);
-    SwitchArg *ignore = new SwitchArg(
-        Arg::flagStartString(), Arg::ignoreNameString(),
-        "Ignores the rest of the labeled arguments following this flag.", false,
-        v);
-    _deleteOnExit(ignore);
-    _deleteOnExit(v);
-    _autoArgs.add(ignore);
-    addToArgList(ignore);
-
     if (_helpAndVersion) {
+        v = new IgnoreRestVisitor(*this);
+        SwitchArg *ignore = new SwitchArg(
+            Arg::flagStartString(), Arg::ignoreNameString(),
+            "Ignores the rest of the labeled arguments following this flag.",
+            false, v);
+        _deleteOnExit(ignore);
+        _deleteOnExit(v);
+        _autoArgs.add(ignore);
+        addToArgList(ignore);
+
         v = new HelpVisitor(this, &_output);
         SwitchArg *help = new SwitchArg(
             "h", "help", "Displays usage information and exits.", false, v);
